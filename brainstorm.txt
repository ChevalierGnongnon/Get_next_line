il faut que si j appelle une fois get next line il rende la ligne 1
puis une deuxieme fois la deux 
puis une troisieme fois la trois... 
etc.
--> 

jusqua ce que la ligne soit vide
--> boucle while jusqua ce que (si l[0] different de \n?) (a remplir)

retourne la ligne qui doit etre lue
--> sous forme de char *

si n a plus rien a lire (fin de fichier)
--> doit retourner NULL

si une erreur 
--> doit retourner NULL

La fonction doit se comporter normalement quelle lise un fichier ou l'entree standard
--> utiliser les arguments du main
--> mettre le path dans une variable de type char *

Toujours retourner la ligne lue suivie de \n la terminant sauf si fin de fichier sans \n 
--> while ('\n')

Doit compiler avec l’option : -D BUFFER_SIZE=n
Cette macro définie à l’invocation du compilateur servira à spécifier la taille du
buffer lors de vos appels à read() dans votre fonction get_next_line().
Cette valeur sera modifiée lors de la peer-evaluation et par la Moulinette dans le
but de tester votre rendu.
-->

Doit compiler sans dbuffersize
--> ifndef 

Comportement indetermine si le fichier a ete modifie entre deux appels alors que le premier fichier 
n a pas ete lu en entier
-->

Comportement indetermine si fichier binaire 
-->

Votre programme doit lire le moins possible à chaque appel à
get_next_line(). Si vous rencontrez une nouvelle ligne, vous devez
retourner la ligne précédente venant d’être lue.
-->

Ne lisez pas l’intégralité du fichier pour ensuite traiter chaque
ligne.
--> 

fin de doc :
--> read retourne 0

1. use read to put in buff array the buffer size number of char in the file
2. put what's after \n in temp (static)
3. search for \n in buff array
4. return buff (before \n and \n ) 
5. free buff 
6. put what's in temp in buff and use strjoin to join with next
7. free temp